<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>uxde</title>
  <subtitle>没有一种光不可接近 请出发</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https//uxde.github.io/"/>
  <updated>2017-03-27T12:32:35.000Z</updated>
  <id>https//uxde.github.io/</id>
  
  <author>
    <name>tu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Cocoapods导入第三方库</title>
    <link href="https//uxde.github.io/2017/03/27/%E4%BD%BF%E7%94%A8Cocoapods%E5%AF%BC%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    <id>https//uxde.github.io/2017/03/27/使用Cocoapods导入第三方库/</id>
    <published>2017-03-27T11:54:53.000Z</published>
    <updated>2017-03-27T12:32:35.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="进入到工程的根目录中，创建空白的Podfile文件"><a href="#进入到工程的根目录中，创建空白的Podfile文件" class="headerlink" title="进入到工程的根目录中，创建空白的Podfile文件"></a>进入到工程的根目录中，创建空白的Podfile文件</h3><ol>
<li>cd project</li>
<li>touch Podfile</li>
<li>打开Podfile，在第一行写下platform :ios, ‘9.0’，指定平台以及所支持的版本。</li>
<li>在单独一行用pod ‘libraryName’，指定需要导入的依赖。</li>
<li>pod install</li>
</ol>
<h5 id="gt-pod-init-可以直接创建具有模板的Podfile文件"><a href="#gt-pod-init-可以直接创建具有模板的Podfile文件" class="headerlink" title="&gt; pod init 可以直接创建具有模板的Podfile文件"></a>&gt; pod init 可以直接创建具有模板的Podfile文件</h5><p>`<br>target ‘test3’ do</p>
<h1 id="Comment-the-next-line-if-you’re-not-using-Swift-and-don’t-want-to-use-dynamic-frameworks"><a href="#Comment-the-next-line-if-you’re-not-using-Swift-and-don’t-want-to-use-dynamic-frameworks" class="headerlink" title="Comment the next line if you’re not using Swift and don’t want to use dynamic frameworks"></a>Comment the next line if you’re not using Swift and don’t want to use dynamic frameworks</h1><p>use_frameworks!</p>
<h1 id="Pods-for-test3"><a href="#Pods-for-test3" class="headerlink" title="Pods for test3"></a>Pods for test3</h1><p>pod ‘SnapKit’ , ‘~&gt; 3.0.0’<br>pod ‘Alamofire’ , ‘~&gt; 4.0’<br>pod ‘SwiftyJSON’ , ‘~&gt; 3.0’</p>
<p>target ‘test3Tests’ do<br>inherit! :search_paths</p>
<h1 id="Pods-for-testing"><a href="#Pods-for-testing" class="headerlink" title="Pods for testing"></a>Pods for testing</h1><p>end</p>
<p>target ‘test3UITests’ do<br>inherit! :search_paths</p>
<h1 id="Pods-for-testing-1"><a href="#Pods-for-testing-1" class="headerlink" title="Pods for testing"></a>Pods for testing</h1><p>end</p>
<p>end<br>`</p>
<h4 id="—"><a href="#—" class="headerlink" title="—"></a>—</h4><h3 id="pod-install-和-pod-update"><a href="#pod-install-和-pod-update" class="headerlink" title="pod install 和 pod update"></a>pod install 和 pod update</h3><h4 id="pod-install"><a href="#pod-install" class="headerlink" title="pod install"></a>pod install</h4><ul>
<li>导入新库，或者移除原有的库。还是先编辑 Podfile 文件，再执行 install 命令。每次pod install被执行，都会下载和安装新的pods。被安装的pods的版本都会写入到Podfile.lock文件中。这个文件会一直跟踪已安装的每一个pods的版本号，并且锁定这些版本号。</li>
<li>当你执行pod install，它只会解决那些没有在Podfile.lock文件中列出来的pods的依赖。<br>  -对于Podfile.lock中列出的pods，只会下载Podfile.lock明确记录的版本，而不会去查看是否有新的版本。<br>  -对于没有在Podfile.lock中列出的pods，会去匹配Podfile文件中描述的版本，如pod ‘AFNetworking’, ‘~&gt; 3.0’。</li>
</ul>
<h4 id="pod-updata"><a href="#pod-updata" class="headerlink" title="pod updata"></a>pod updata</h4><ul>
<li>pod outdated 可以查看有哪些pods有新的版本</li>
<li>执行 pod update PODNAME CocoaPods会尝试发现PODNAME的可更新的版本，而不会去关注Podfile.lock中的版本。它会把依赖更新到最新的版本。</li>
<li>pod update CocoaPods就会将所有列在Podfile中的依赖更新到最新版本。</li>
</ul>
<h4 id="—-1"><a href="#—-1" class="headerlink" title="—"></a>—</h4><h3 id="Podfile-lock"><a href="#Podfile-lock" class="headerlink" title="Podfile.lock"></a>Podfile.lock</h3><ul>
<li>每一次修改Podfile.lock后，你必须要commit &amp; push它到Repo。 可以把pod install之后生成的Pods文件夹放入到Repo中，来管理依赖版本。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;进入到工程的根目录中，创建空白的Podfile文件&quot;&gt;&lt;a href=&quot;#进入到工程的根目录中，创建空白的Podfile文件&quot; class=&quot;headerlink&quot; title=&quot;进入到工程的根目录中，创建空白的Podfile文件&quot;&gt;&lt;/a&gt;进入到工程的根目录中，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="https//uxde.github.io/2017/03/25/hello%20world/"/>
    <id>https//uxde.github.io/2017/03/25/hello world/</id>
    <published>2017-03-25T08:09:52.000Z</published>
    <updated>2017-03-25T08:10:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>hello world</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hello world&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
</feed>
